// SPDX-License-Identifier: MIT

pragma solidity ^0.6.0;

contract SimpleStorage {
    // This declaration without a value automatically assigns
    // "null" value (which is equal to 'zero) to favoriteNumber
    uint256 favoriteNumber;
    bool favoriteBool;


    // putting "public" before the favoriteNumber above will place a Blue button in
    // the deploys contract section

    struct People {
        uint256 favoriteNumber;
        string name;
    }   

    People[] public people;

    /// People public person = People({favoriteNumber: 2, name: "Patrick"});

    function store(uint256 _favoriteNumber) public {
        favoriteNumber = _favoriteNumber;
    }

    function retrieve() public view returns(uint256) {
        return favoriteNumber;

    // 'view and 'pure are 'Non-State changing functions that do not make transactons when used
    // the use of 'view just reads off the blockchain and doesnt require a transaction
    // So when you see a blue button to the left of the code, it doesnt require a transaction
    // However, the Orange button is a function that requires a transaction and cost a little gas fee
    // the 'pure function is used to perfrom some type of math
    }    

    function addPerson(string memory _name, uint256 _favoriteNumber) public{

        people.push(People(_favoriteNumber, _name));

        // The more exact way of writing this is  people.push(People({favoriteNumber: _favoriteNumber, name: _name}));

        // "memory" only store data during the execution of the function
        // "storage" will store the value even after the funtion has executed
        // "string"s are objects (an array of bytes). Because of this, you have to determine how it is to be stored (e.g. memoru or storage)
    }
       
    // ****** You must enter a value of 0 (zero) in the "people" entry space. 
    // ****** Then enter "string","number" and click addPerson before clicking people button
    // ****** Since this is dynamic, you can store each person and number by changing the "people" number and
    // ****** "assigning that numbered person a "name" and a "favorite number" in the "addPerson" section
    
    
}
